% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Rtsne.R
\name{Rtsne}
\alias{Rtsne}
\title{Barnes-Hut implementation of t-Distributed Stochastic Neighbor Embedding}
\usage{
Rtsne(X, dims = 2, initial_dims = 50, perplexity = 30, theta = 0.5,
  check_duplicates = TRUE, pca = TRUE, max_iter = 1000, verbose = FALSE,
  is_distance = FALSE)
}
\arguments{
\item{X}{matrix; Data matrix}

\item{dims}{integer; Output dimensionality (default: 2)}

\item{initial_dims}{integer; the number of dimensions that should be retained in the initial PCA step (default: 50)}

\item{perplexity}{numeric; Perplexity parameter}

\item{theta}{numeric; Speed/accuracy trade-off (increase for less accuracy), set to 0.0 for exact TSNE (default: 0.5)}

\item{check_duplicates}{logical; Checks whether duplicates are present. It is best to make sure there are no duplicates present and set this option to FALSE, especially for large datasets (default: TRUE)}

\item{pca}{logical; Whether an initial PCA step should be performed (default: TRUE)}

\item{verbose}{logical; Whether progress updates should be printed (default: FALSE)}

\item{is_distance}{logical; Indicate whether X is a distance matrix (experimental, default: FALSE)}

\item{max_iter;}{Maximum number of iterations (default: 1000)}
}
\value{
List with the following elements:
\item{Y}{Matrix containing the new representations for the objects}
\item{N}{Number of objects}
\item{origD}{Original Dimensionality before TSNE}
\item{perplexity}{See above}
\item{theta}{See above}
}
\description{
Wrapper for the C++ implementation of Barnes-Hut t-Distributed Stochastic Neighbor Embedding
}
\details{
After checking the correctness of the input, this function (optionally) does an initial reduction of the feature space using \code{\link{prcomp}}, before calling the C++ TSNE implementation. Since R's random number generator is used, use \code{\link{set.seed}} before the function call to get reproducible results.
}
\examples{
iris_unique <- unique(iris) # Remove duplicates
tsne_out <- Rtsne(as.matrix(iris_unique[,1:4])) # Run TSNE

# Show the objects in the 2D tsne representation
plot(tsne_out$Y,col=iris_unique$Species)
}
\references{
L.J.P. van der Maaten. Barnes-Hut-SNE. In Proceedings of the International Conference on Learning Representations, 2013.
}

